---
interface StreamOption {
  titulo: string;
  descripcion: string;
  icono: string;
  color: string;
  enlace: string;
  gradiente: string;
}

const streams: StreamOption[] = [
  {
    titulo: "Radio en Vivo",
    descripcion: "Escucha nuestras transmisiones en vivo las 24 horas",
    icono: "radio",
    color: "text-indigo-600",
    enlace: "https://link-de-radio-en-vivo",
    gradiente: "from-indigo-500 to-purple-600"
  },
  {
    titulo: "Televisión en Vivo",
    descripcion: "Mira nuestros servicios y programas en directo",
    icono: "live_tv",
    color: "text-red-600",
    enlace: "https://link-de-tv-en-vivo",
    gradiente: "from-red-500 to-orange-600"
  }
];
---

<section class="py-20 bg-gradient-to-br from-slate-50 to-blue-50">
  <div class="container mx-auto px-6">
    <div class="max-w-7xl mx-auto">
      <!-- Encabezado -->
      <div class="text-center mb-16">
        <h2 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
          Transmisiones en Vivo
        </h2>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
          Conéctate con nosotros desde cualquier lugar del mundo
        </p>
      </div>

      <!-- Grid de Streams -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {streams.map((stream) => (
          <a
            href={stream.enlace}
            target="_blank"
            rel="noopener"
            class="group relative bg-white rounded-3xl overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-1"
          >
            <!-- Gradiente de fondo con patrón -->
            <div class={`absolute inset-0 bg-gradient-to-br ${stream.gradiente} opacity-5 group-hover:opacity-10 transition-opacity duration-300`}>
              <div class="absolute inset-0 bg-[linear-gradient(45deg,_transparent_25%,_rgba(255,255,255,0.1)_25%,_rgba(255,255,255,0.1)_50%,_transparent_50%,_transparent_75%,_rgba(255,255,255,0.1)_75%)] bg-[length:20px_20px]"></div>
            </div>

            <!-- Contenido -->
            <div class="relative p-8">
              <!-- Icono con fondo -->
              <div class={`w-20 h-20 rounded-2xl bg-gradient-to-br ${stream.gradiente} flex items-center justify-center mb-6 transform group-hover:scale-110 transition-transform duration-300`}>
                <span class="material-icons text-white text-4xl">
                  {stream.icono}
                </span>
              </div>

              <!-- Texto -->
              <h3 class="text-2xl font-bold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors duration-300">
                {stream.titulo}
              </h3>
              <p class="text-gray-600 mb-6">
                {stream.descripcion}
              </p>

              <!-- Botón -->
              <div class="flex items-center justify-between">
                <div class="flex items-center space-x-2">
                  <span class="w-3 h-3 rounded-full bg-red-500 animate-pulse"></span>
                  <span class="text-sm font-medium text-gray-600">EN VIVO</span>
                </div>
                <div class="flex items-center text-blue-600 font-medium">
                  <span>Ver ahora</span>
                  <span class="material-icons ml-2 transform group-hover:translate-x-1 transition-transform duration-300">
                    arrow_forward
                  </span>
                </div>
              </div>
            </div>

            <!-- Borde decorativo -->
            <div class={`absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r ${stream.gradiente} transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left`}></div>
          </a>
        ))}
      </div>

      <!-- Información adicional -->
      <div class="mt-12 text-center">
        <p class="text-gray-600">
          También puedes descargar nuestra app para ver las transmisiones en tu dispositivo móvil
        </p>
      </div>
    </div>
  </div>
</section>

<style>
  /* Animación suave para los elementos */
  .grid > * {
    animation: fadeIn 0.5s ease-out;
    animation-fill-mode: both;
  }

  .grid > *:nth-child(1) { animation-delay: 0.1s; }
  .grid > *:nth-child(2) { animation-delay: 0.2s; }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
